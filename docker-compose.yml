services:
  # Redis for Celery broker and caching
  redis:
    image: redis:7-alpine
    container_name: exoplanet_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: exoplanet_backend
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=true
      - LOG_LEVEL=INFO
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./AI_Model_Forest/trained_model:/app/models
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  celery_worker:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A worker.celery_app worker --loglevel=info
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=true
      - LOG_LEVEL=INFO
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./AI_Model_Forest/trained_model:/app/models

  # Celery Flower (monitoring)
  flower:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: exoplanet_flower
    command: celery -A worker.celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app

  # Next.js Frontend (optional - can run separately)
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: exoplanet_frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  redis_data:
